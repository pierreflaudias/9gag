# To get started with security, check out the documentation:
# http://symfony.com/doc/current/security.html
security:
    encoders:
        LolBundle\Entity\User:
            algorithm: bcrypt

    # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        #chain_provider:
        #    chain:
        #        providers: [db_provider, api_key_user_provider]
        db_provider:
            entity:
                class: LolBundle:User
                property: username
                #property: apiKey
        api_key_user_provider:
            id: api_key_user_provider

    firewalls:
        #secured_area:
        #    logout:
        #        path:   /logout
        #        target: /
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern: ^/api/meme(/[0-9]+/(upvote|downvote))$
            stateless: true
            anonymous: true
            provider: api_key_user_provider
            guard:
                authenticators:
                    - app.token_authenticator

        main:
            anonymous: ~
            # activate different ways to authenticate

            # http://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            #http_basic: ~
            provider: db_provider

            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
            form_login:
                login_path: login
                check_path: login
            logout:
                path:   /logout
                target: /
            #http_basic:
                #authenticator: api_key_authenticator
            #provider: api_key_user_provider
        #api:
        #    http_basic:
                #authenticator: api_key_authenticator
        #        provider: api_key_user_provider

    access_control:
        # require ROLE_ADMIN for /admin*
#        - { path: '^/', roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: '^/login|logout', roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/meme/[0-9]+$, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET] }
#        - { path: ^/meme/[0-9]+$, roles: ROLE_USER, methods: [POST] }
#        - { path: '^/meme$', roles: ROLE_USER, methods: [POST] }
         - { path: '^/api', roles: IS_AUTHENTICATED_ANONYMOUSLY }